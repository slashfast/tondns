// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gems

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// HistoryHistoryNftItemNftItemHistoryConnection includes the requested fields of the GraphQL type NftItemHistoryConnection.
type HistoryHistoryNftItemNftItemHistoryConnection struct {
	Items  []HistoryHistoryNftItemNftItemHistoryConnectionItemsNftItemHistory `json:"items"`
	Cursor string                                                             `json:"cursor"`
}

// GetItems returns HistoryHistoryNftItemNftItemHistoryConnection.Items, and is useful for accessing the field via an interface.
func (v *HistoryHistoryNftItemNftItemHistoryConnection) GetItems() []HistoryHistoryNftItemNftItemHistoryConnectionItemsNftItemHistory {
	return v.Items
}

// GetCursor returns HistoryHistoryNftItemNftItemHistoryConnection.Cursor, and is useful for accessing the field via an interface.
func (v *HistoryHistoryNftItemNftItemHistoryConnection) GetCursor() string { return v.Cursor }

// HistoryHistoryNftItemNftItemHistoryConnectionItemsNftItemHistory includes the requested fields of the GraphQL type NftItemHistory.
type HistoryHistoryNftItemNftItemHistoryConnectionItemsNftItemHistory struct {
	CreatedAt int    `json:"createdAt"`
	Address   string `json:"address"`
}

// GetCreatedAt returns HistoryHistoryNftItemNftItemHistoryConnectionItemsNftItemHistory.CreatedAt, and is useful for accessing the field via an interface.
func (v *HistoryHistoryNftItemNftItemHistoryConnectionItemsNftItemHistory) GetCreatedAt() int {
	return v.CreatedAt
}

// GetAddress returns HistoryHistoryNftItemNftItemHistoryConnectionItemsNftItemHistory.Address, and is useful for accessing the field via an interface.
func (v *HistoryHistoryNftItemNftItemHistoryConnectionItemsNftItemHistory) GetAddress() string {
	return v.Address
}

// HistoryResponse is returned by History on success.
type HistoryResponse struct {
	HistoryNftItem HistoryHistoryNftItemNftItemHistoryConnection `json:"historyNftItem"`
}

// GetHistoryNftItem returns HistoryResponse.HistoryNftItem, and is useful for accessing the field via an interface.
func (v *HistoryResponse) GetHistoryNftItem() HistoryHistoryNftItemNftItemHistoryConnection {
	return v.HistoryNftItem
}

// ItemsNftItemsByOwnerNftItemConnection includes the requested fields of the GraphQL type NftItemConnection.
type ItemsNftItemsByOwnerNftItemConnection struct {
	Items  []ItemsNftItemsByOwnerNftItemConnectionItemsNftItem `json:"items"`
	Cursor string                                              `json:"cursor"`
}

// GetItems returns ItemsNftItemsByOwnerNftItemConnection.Items, and is useful for accessing the field via an interface.
func (v *ItemsNftItemsByOwnerNftItemConnection) GetItems() []ItemsNftItemsByOwnerNftItemConnectionItemsNftItem {
	return v.Items
}

// GetCursor returns ItemsNftItemsByOwnerNftItemConnection.Cursor, and is useful for accessing the field via an interface.
func (v *ItemsNftItemsByOwnerNftItemConnection) GetCursor() string { return v.Cursor }

// ItemsNftItemsByOwnerNftItemConnectionItemsNftItem includes the requested fields of the GraphQL type NftItem.
type ItemsNftItemsByOwnerNftItemConnectionItemsNftItem struct {
	Address    string                                                                   `json:"address"`
	Name       string                                                                   `json:"name"`
	Collection ItemsNftItemsByOwnerNftItemConnectionItemsNftItemCollectionNftCollection `json:"collection"`
}

// GetAddress returns ItemsNftItemsByOwnerNftItemConnectionItemsNftItem.Address, and is useful for accessing the field via an interface.
func (v *ItemsNftItemsByOwnerNftItemConnectionItemsNftItem) GetAddress() string { return v.Address }

// GetName returns ItemsNftItemsByOwnerNftItemConnectionItemsNftItem.Name, and is useful for accessing the field via an interface.
func (v *ItemsNftItemsByOwnerNftItemConnectionItemsNftItem) GetName() string { return v.Name }

// GetCollection returns ItemsNftItemsByOwnerNftItemConnectionItemsNftItem.Collection, and is useful for accessing the field via an interface.
func (v *ItemsNftItemsByOwnerNftItemConnectionItemsNftItem) GetCollection() ItemsNftItemsByOwnerNftItemConnectionItemsNftItemCollectionNftCollection {
	return v.Collection
}

// ItemsNftItemsByOwnerNftItemConnectionItemsNftItemCollectionNftCollection includes the requested fields of the GraphQL type NftCollection.
type ItemsNftItemsByOwnerNftItemConnectionItemsNftItemCollectionNftCollection struct {
	Address string `json:"address"`
}

// GetAddress returns ItemsNftItemsByOwnerNftItemConnectionItemsNftItemCollectionNftCollection.Address, and is useful for accessing the field via an interface.
func (v *ItemsNftItemsByOwnerNftItemConnectionItemsNftItemCollectionNftCollection) GetAddress() string {
	return v.Address
}

// ItemsResponse is returned by Items on success.
type ItemsResponse struct {
	NftItemsByOwner ItemsNftItemsByOwnerNftItemConnection `json:"nftItemsByOwner"`
}

// GetNftItemsByOwner returns ItemsResponse.NftItemsByOwner, and is useful for accessing the field via an interface.
func (v *ItemsResponse) GetNftItemsByOwner() ItemsNftItemsByOwnerNftItemConnection {
	return v.NftItemsByOwner
}

// __HistoryInput is used internally by genqlient
type __HistoryInput struct {
	Address string `json:"address"`
	First   int    `json:"first"`
	After   string `json:"after"`
}

// GetAddress returns __HistoryInput.Address, and is useful for accessing the field via an interface.
func (v *__HistoryInput) GetAddress() string { return v.Address }

// GetFirst returns __HistoryInput.First, and is useful for accessing the field via an interface.
func (v *__HistoryInput) GetFirst() int { return v.First }

// GetAfter returns __HistoryInput.After, and is useful for accessing the field via an interface.
func (v *__HistoryInput) GetAfter() string { return v.After }

// __ItemsInput is used internally by genqlient
type __ItemsInput struct {
	Address string `json:"address"`
	First   int    `json:"first"`
	After   string `json:"after"`
}

// GetAddress returns __ItemsInput.Address, and is useful for accessing the field via an interface.
func (v *__ItemsInput) GetAddress() string { return v.Address }

// GetFirst returns __ItemsInput.First, and is useful for accessing the field via an interface.
func (v *__ItemsInput) GetFirst() int { return v.First }

// GetAfter returns __ItemsInput.After, and is useful for accessing the field via an interface.
func (v *__ItemsInput) GetAfter() string { return v.After }

// The query or mutation executed by History.
const History_Operation = `
query History ($address: String!, $first: Int!, $after: String) {
	historyNftItem(address: $address, first: $first, after: $after) {
		items {
			createdAt
			address
		}
		cursor
	}
}
`

func History(
	ctx_ context.Context,
	client_ graphql.Client,
	address string,
	first int,
	after string,
) (*HistoryResponse, error) {
	req_ := &graphql.Request{
		OpName: "History",
		Query:  History_Operation,
		Variables: &__HistoryInput{
			Address: address,
			First:   first,
			After:   after,
		},
	}
	var err_ error

	var data_ HistoryResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Items.
const Items_Operation = `
query Items ($address: String!, $first: Int!, $after: String) {
	nftItemsByOwner(ownerAddress: $address, first: $first, after: $after) {
		items {
			address
			name
			collection {
				address
			}
		}
		cursor
	}
}
`

func Items(
	ctx_ context.Context,
	client_ graphql.Client,
	address string,
	first int,
	after string,
) (*ItemsResponse, error) {
	req_ := &graphql.Request{
		OpName: "Items",
		Query:  Items_Operation,
		Variables: &__ItemsInput{
			Address: address,
			First:   first,
			After:   after,
		},
	}
	var err_ error

	var data_ ItemsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
